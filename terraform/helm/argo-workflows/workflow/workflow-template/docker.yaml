# Build and push an image using Docker Buildkit. This does not need privileged access, unlike Docker in Docker (DIND).
#
# Publishing images requires an access token. For hub.docker.com you can create one at https://hub.docker.com/settings/security
# This needs to be mounted as `$DOCKER_CONFIG/config.json`. To do this, you'll need to create a secret as follows:
#
#   export DOCKER_USERNAME=******
#   export DOCKER_TOKEN=******
#   kubectl create secret generic docker-config --from-literal="config.json={\"auths\": {\"https://index.docker.io/v1/\": {\"auth\": \"$(echo -n $DOCKER_USERNAME:$DOCKER_TOKEN|base64)\"}}}"
#
#  Read more:
#
#     * https://github.com/moby/buildkit#expose-buildkit-as-a-tcp-service
#     * https://blog.alexellis.io/building-containers-without-docker/
#     * https://hub.docker.com/r/moby/buildkit
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: buildkit
  namespace: argo
  annotations:
    workflows.argoproj.io/description: |
      Build and push an image using Docker Buildkit. This does not need privileged access, unlike Docker in Docker (DIND).
    workflows.argoproj.io/maintainer: '@alexec'
    workflows.argoproj.io/tags: buildkit
    workflows.argoproj.io/version: '>= 2.9.0'
spec:
  serviceAccountName: gitea
  entrypoint: main
  templates:
    - name: checkout
      inputs:
        parameters:
          - name: repo
          - name: branch
      script:
        image: alpine/git:v2.32.0
        workingDir: /work
        args:
          - sh
        # use --depth 1 and --single-branch for fastest possible checkout
        source: git clone --depth 1 --single-branch --branch {{workflow.parameters.branch}} {{workflow.parameters.repo}} .
        volumeMounts:
          - mountPath: /work
            name: work
    - name: image
      inputs:
        parameters:
          # Name of the image to push
          - name: image
      # Mount the configuration so we can push the image.
      # This should create the /.docker/config.json file.
      volumes:
        - name: docker-config
          secret:
            secretName: docker-config
      container:
        image: moby/buildkit:v0.7.2-rootless
        volumeMounts:
          - name: work
            mountPath: /work
          - name: docker-config
            mountPath: /.docker
        workingDir: /work/
        env:
          - name: BUILDKITD_FLAGS
            value: --oci-worker-no-process-sandbox
          - name: DOCKER_CONFIG
            value: /.docker
        command:
          - buildctl-daemonless.sh
        args:
          - build
          - --frontend
          - dockerfile.v0
          - --local
          - context=.
          - --local
          - dockerfile=.
          - --output
          - type=image,name=docker.io/{{inputs.parameters.image}},push=true